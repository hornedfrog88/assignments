ggplot(course_capacity_local, aes(EnrlTotal, fill = TotalSections)) + geom_histogram(binwidth = .8) + labs(x = 'X', y = 'Total Enrolled Students')
ggplot(course_capacity_local, aes(EnrlTotal, fill = TotalSections)) + geom_histogram(binwidth = 3.0) + labs(x = 'X', y = 'Total Enrolled Students')
ggplot(course_capacity_local, aes(EnrlTotal)) + geom_histogram(binwidth = 3.0) + labs(x = 'X', y = 'Total Enrolled Students')
ggplot(course_capacity_local, aes(PercentFull)) + geom_histogram(binwidth = 1.0) + labs(x = 'X', y = 'Total Enrolled Students')
ggplot(course_capacity_local, aes(x= PercentFull, y = EnrlTotal)) + geom_point() + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
course_capacity_local %>% filter(PercentFull<=2.0)
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point() + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
clean_course_capacity_local <- course_capacity_local %>% filter(PercentFull<=2.0)
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point() + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
ggplot(clean_course_capacity_local, aes(x= PercentFull, y = EnrlTotal)) + geom_point() + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
ggplot(clean_course_capacity_local, aes(x= PercentFull, y = EnrlTotal)) + geom_point() + labs(x = 'Percent Full', y = 'Total Enrolled Students')
ggplot(clean_course_capacity_local, aes(x= PercentFull*100, y = EnrlTotal)) + geom_point() + labs(x = 'Percent Full', y = 'Total Enrolled Students')
model1 <- lm(EnrlTotal~TotalCapacity,data = clean_course_capacity_local)
model1
model1 <- lm(EnrlTotal~TotalCapacity,data = clean_course_capacity_local)
model2 <- lm(EnrlTotal~TotalCapacity+TotalSections,data = clean_course_capacity_local)
model2
summary(model1)
summary(model2)
summary?
?summary
?summary()
View(config)
library('ProjectTemplate')
load.project()
#library('dplyr')
#library('magrittr')
#library('ggplot2')
#library('tidyr')
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
library('ProjectTemplate')
load.project()
#library('dplyr')
#library('magrittr')
#library('ggplot2')
#library('tidyr')
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
clean_course_capacity_local <- course_capacity_local %>% filter(PercentFull<=2.0)
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point() + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
model1 <- lm(EnrlTotal~TotalCapacity,data = clean_course_capacity_local)
summary(model1)
clean_course_capacity_local <- course_capacity_local %>% filter(PercentFull<=1.5)
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point() + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
model1 <- lm(EnrlTotal~TotalCapacity,data = clean_course_capacity_local)
summary(model1)
model1 <- lm(EnrlTotal~TotalCapacity,data = clean_course_capacity_local)
summary(model1)
abline(model1)
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point() + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
abline(model1)
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point() + abline(model1) labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point(color='blue') + geom_smooth(method = "lm", se = False) + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point(color='blue') + geom_smooth(method = "lm", se = FALSE) + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point(color='blue') + geom_smooth(method = "lm", se = FALSE, color='Red') + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point(color='blue') + geom_line(method = "lm", se = FALSE, color='Red') + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point(color='blue') + geom_smooth(method = "lm", se = TRUE, color='Red') + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
model1 <- lm(EnrlTotal~TotalCapacity,data = clean_course_capacity_local)
summary(model1)
View(sample_ids)
rm(sample_ids)
View(project.info)
View(sample_test_data)
rm(sample_test_data)
View(test_sample_ids)
rm(test_sample_ids)
View(test_data_multi_term)
rm(test_data_multi_term)
rm(model2)
rm(i,j,k,x)
View(x_increment)
rm(x_increment)
distinct_ids
rm(distinct_ids)
library('ProjectTemplate')
load.project()
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
clean_course_capacity_local <- course_capacity_local %>% filter(PercentFull<=2.0)
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point() + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
model1 <- lm(EnrlTotal~TotalCapacity,data = clean_course_capacity_local)
summary(model1)
library('ProjectTemplate')
load.project()
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
clean_course_capacity_local <- course_capacity_local %>% filter(PercentFull<=2.0)
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point() + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
model1 <- lm(EnrlTotal~TotalCapacity,data = clean_course_capacity_local)
summary(model1)
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point(color='blue') + geom_smooth(method = "lm", se = TRUE, color='Red') + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point(color='blue') + geom_smooth(method = "lm", se = FALSE, color='Red') + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
View(course_capacity_local)
library(rmarkdown)
install.packages("yaml")
install.packages("caret")
install.packages("stringr")
install.packages("timeDate")
install.packages("tidyselect")
setwd("C:/Users/Richard/Desktop/csx415-assignments/project")
knitr::opts_chunk$set(echo = TRUE)
head(clean_course_capacity_local)
View(PROJECT.DATA.RAW)
rm(PROJECT.DATA.RAW)
View(number_of_rows)
View(number_of_rows)
rm(number_of_rows)
View(df)
rm(df)
View(config)
View(config)
View(project_data_local)
rm(project_data_local)
View(project.info)
View(project_data_vector)
View(project_data_vector)
library('ProjectTemplate')
load.project()
View(PROJECT.DATA.RAW)
View(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
View(COURSE.CAPACITY.DATA)
View(PROJECT.DATA.RAW)
View(project_data_vector)
View(PROJECT.DATA.RAW)
View(project.info)
View(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
View(PROJECT.DATA.RAW)
library('ProjectTemplate')
load.project()
View(PROJECT.DATA.TEST1)
View(PROJECT.DATA.TEST1)
library('ProjectTemplate')
load.project()
library('ProjectTemplate')
load.project()
View(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
View(config)
View(COURSE.CAPACITY.DATA)
library('ProjectTemplate')
load.project()
View(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
rm(PROJECT.DATA.RAW)
rm(df)
rm(number_of_rows)
View(project_data_local)
rm(project_data_local)
View(project.info)
View(config)
View(project_data_vector)
rm(project_data_vector)
View(project.info)
View(project.info)
View(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
View(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
View(COURSE.CAPACITY.DATA)
library('ProjectTemplate')
load.project()
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
total_enrl_attempts_local <- tbl_df(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
combined_data_local <- merge(total_enrl_attempts_local, course_capacity_local[, c("Term", "SummerIndicator")], by="CourseID")
View(total_enrl_attempts_local)
View(course_capacity_local)
combined_data_local <- merge(total_enrl_attempts_local, course_capacity_local, by= c('CourseID','Term'))
View(combined_data_local)
combined_data_local <- merge(course_capacity_local, total_enrl_attempts_local, by= c('CourseID','Term'))
View(combined_data_local)
training_data_local <- combined_data_local %>% filter(Term < 2182)
test_data_local <- combined_data_local %>% filter(Term >= 2182)
View(training_data_local)
View(training_data_local)
View(training_data_local)
?lm
mode11 <- lm(EnrlTotal ~ Course + TotalCapacity + TotalSections + TotalAttempts, data=training_data_local)
summary(model1)
mode11 <- lm(EnrlTotal ~ TotalCapacity + TotalSections + TotalAttempts, data=training_data_local)
summary(mode11)
mode11 <- lm(EnrlTotal ~ TotalCapacity + TotalSections + TotalAttempts, data=training_data_local)
summary(mode11)
plot(model1)
mode11 <- lm(EnrlTotal ~ TotalCapacity + TotalSections + TotalAttempts, data=training_data_local)
plot(model1)
mode11 <- lm(EnrlTotal ~ TotalCapacity)
mode11 <- lm(EnrlTotal ~ TotalCapacity, data = training_data_local)
#+ TotalSections + TotalAttempts, data=training_data_local)
plot(model1)
fit <- lm(EnrlTotal ~ TotalCapacity, data = training_data_local)
#+ TotalSections + TotalAttempts, data=training_data_local)
#plot(model1)
plot(fit)
View(training_data_local)
fit <- lm(EnrlTotal ~ TotalCapacity + TotalSections + TotalAttempts, data = training_data_local)
#+ TotalSections + TotalAttempts, data=training_data_local)
#plot(model1)
plot(fit)
summary(fit)
fit <- lm(EnrlTotal ~ TotalCapacity + TotalAttempts, data = training_data_local)
summary(fit)
summary(fit)
fit <- lm(EnrlTotal ~ CourseID + TotalCapacity + TotalAttempts, data = training_data_local)
summary(fit)
pairs(training_data_local)
training_data_minimized <- training_data_local %>% select(EnrlTotal, CourseID, TotalCapacity,TotalAttempts)
pairs(training_data_minimized)
training_data_minimized <- training_data_local %>% select(EnrlTotal, CourseID, TotalCapacity,TotalAttempts)
pairs(training_data_minimized)
training_data_minimized <- training_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
pairs(training_data_minimized)
fit <- lm(EnrlTotal ~ TotalSections + TotalCapacity + TotalAttempts, data = training_data_minimized)
summary(fit)
cor(training_data_minimized)
fit <- lm(EnrlTotal ~ TotalSections + TotalCapacity + TotalAttempts, data = training_data_minimized)
summary(fit)
install.packages("rpart.plot")
rpart.plot(fit_rpart)
library('ProjectTemplate')
load.project()
library(rpart)
library(rpart.plot)
rpart.plot(fit_rpart)
rpart.plot(fit_rpart, type = 3, digits = 3, fallen.leaves = TRUE)
fit_rpart <- rpart(EnrlTotal ~ ., data = training_data_minimized, method = "anova")
fit_rpart
rpart.plot(fit_rpart, type = 3, digits = 3, fallen.leaves = TRUE)
library('ProjectTemplate')
load.project()
library(rpart)
library(rpart.plot)
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
total_enrl_attempts_local <- tbl_df(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
combined_data_local <- merge(course_capacity_local, total_enrl_attempts_local, by= c('CourseID','Term'))
training_data_local <- combined_data_local %>% filter(Term < 2182)
test_data_local <- combined_data_local %>% filter(Term >= 2182)
training_data_minimized <- training_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
fit_rpart <- rpart(EnrlTotal ~ ., data = training_data_minimized, method = "anova")
fit_rpart
predict_rpart <- predict(fit_rpart, test_data_minimized)
library('ProjectTemplate')
load.project()
library(rpart)
library(rpart.plot)
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
total_enrl_attempts_local <- tbl_df(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
combined_data_local <- merge(course_capacity_local, total_enrl_attempts_local, by= c('CourseID','Term'))
training_data_local <- combined_data_local %>% filter(Term < 2182)
test_data_local <- combined_data_local %>% filter(Term >= 2182)
training_data_minimized <- training_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
test_data_minimized <- test_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
fit_rpart <- rpart(EnrlTotal ~ ., data = training_data_minimized, method = "anova")
fit_rpart
rpart.plot(fit_rpart, type = 3, digits = 3, fallen.leaves = TRUE)
predict_rpart <- predict(fit_rpart, test_data_minimized)
predict_rpart
predict_rpart <- predict(fit_rpart, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_rpart)
library('ProjectTemplate')
load.project()
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
total_enrl_attempts_local <- tbl_df(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
combined_data_local <- merge(course_capacity_local, total_enrl_attempts_local, by= c('CourseID','Term'))
training_data_local <- combined_data_local %>% filter(Term < 2182)
test_data_local <- combined_data_local %>% filter(Term >= 2182)
training_data_minimized <- training_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
test_data_minimized <- test_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
pairs(training_data_minimized)
cor(training_data_minimized)
predict_linear <- predict(fit, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_linear)
MeanAbsoluteError
predict_linear <- predict(fit, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_linear)
print("The Mean Abosulte Error = ",MeanAbsoluteError)
predict_linear <- predict(fit, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_linear)
print("Mean Absolute Error = $MeanAbsoluteError")
predict_linear <- predict(fit, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_linear)
print("Mean Absolute Error = %MeanAbsoluteError")
predict_linear <- predict(fit, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_linear)
print("Mean Absolute Error = ", MeanAbsoluteError)
predict_linear <- predict(fit, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_linear)
print("The Mean Absolute Error of the Prediction is ", %MeanAbsoluteError)
predict_linear <- predict(fit, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_linear)
print(paste("The Mean Absolute Error of the Prediction is ", MeanAbsoluteError))
predict_linear <- predict(fit, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_linear)
print(paste("The Mean Absolute Error of the Prediction is ", round(MeanAbsoluteError,2))
predict_linear <- predict(fit, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_linear)
print(paste("The Mean Absolute Error of the Prediction is ", round(MeanAbsoluteError,digits = 2))
predict_linear <- predict(fit, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_linear)
round(MeanAbsoluteError, digits = 2)
#print(paste("The Mean Absolute Error of the Prediction is ", #round(MeanAbsoluteError,digits = 2))
predict_linear <- predict(fit, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_linear)
round(MeanAbsoluteError, digits = 2)
print(paste("The Mean Absolute Error of the Prediction is ", round(MeanAbsoluteError, digits = 2)))
library('ProjectTemplate')
load.project()
library(rpart)
library(rpart.plot)
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
total_enrl_attempts_local <- tbl_df(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
combined_data_local <- merge(course_capacity_local, total_enrl_attempts_local, by= c('CourseID','Term'))
training_data_local <- combined_data_local %>% filter(Term < 2182)
test_data_local <- combined_data_local %>% filter(Term >= 2182)
training_data_minimized <- training_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
test_data_minimized <- test_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
fit_rpart <- rpart(EnrlTotal ~ ., data = training_data_minimized, method = "anova")
fit_rpart
rpart.plot(fit_rpart, type = 3, digits = 3, fallen.leaves = TRUE)
predict_rpart <- predict(fit_rpart, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_rpart)
print(paste("The Mean Absolute Error of the Prediction is", round(MeanAbsoluteError, digits = 2)))
library('ProjectTemplate')
load.project()
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
total_enrl_attempts_local <- tbl_df(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
combined_data_local <- merge(course_capacity_local, total_enrl_attempts_local, by= c('CourseID','Term'))
training_data_local <- combined_data_local %>% filter(Term < 2182)
test_data_local <- combined_data_local %>% filter(Term >= 2182)
training_data_minimized <- training_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
test_data_minimized <- test_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
pairs(training_data_minimized)
cor(training_data_minimized)
fit <- lm(EnrlTotal ~ TotalSections + TotalCapacity + TotalAttempts, data = training_data_minimized)
summary(fit)
library('ProjectTemplate')
load.project()
library(rpart)
library(rpart.plot)
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
total_enrl_attempts_local <- tbl_df(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
combined_data_local <- merge(course_capacity_local, total_enrl_attempts_local, by= c('CourseID','Term'))
training_data_local <- combined_data_local %>% filter(Term < 2182)
test_data_local <- combined_data_local %>% filter(Term >= 2182)
training_data_minimized <- training_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
test_data_minimized <- test_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
fit_rpart <- rpart(EnrlTotal ~ ., data = training_data_minimized, method = "anova")
fit_rpart
rpart.plot(fit_rpart, type = 3, digits = 3, fallen.leaves = TRUE)
library('ProjectTemplate')
load.project()
library(rpart)
library(rpart.plot)
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
total_enrl_attempts_local <- tbl_df(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
combined_data_local <- merge(course_capacity_local, total_enrl_attempts_local, by= c('CourseID','Term'))
training_data_local <- combined_data_local %>% filter(Term < 2182)
test_data_local <- combined_data_local %>% filter(Term >= 2182)
training_data_minimized <- training_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
test_data_minimized <- test_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
fit_rpart <- rpart(EnrlTotal ~ ., data = training_data_minimized, method = "anova")
fit_rpart
rpart.plot(fit_rpart, type = 3, digits = 3, fallen.leaves = TRUE)
predict_rpart <- predict(fit_rpart, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_rpart)
print(paste("The Mean Absolute Error of the Prediction is", round(MeanAbsoluteError, digits = 2)))
library('ProjectTemplate')
load.project()
library(rpart)
library(rpart.plot)
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
total_enrl_attempts_local <- tbl_df(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
combined_data_local <- merge(course_capacity_local, total_enrl_attempts_local, by= c('CourseID','Term'))
training_data_local <- combined_data_local %>% filter(Term < 2182)
test_data_local <- combined_data_local %>% filter(Term >= 2182)
training_data_minimized <- training_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
test_data_minimized <- test_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
fit_rpart <- rpart(EnrlTotal ~ ., data = training_data_minimized, method = "anova")
fit_rpart
rpart.plot(fit_rpart, type = 3, digits = 3, fallen.leaves = TRUE)
predict_rpart <- predict(fit_rpart, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_rpart)
print(paste("The Mean Absolute Error of the Prediction is", round(MeanAbsoluteError, digits = 2)))
install.packages(c("lazyeval", "lubridate", "ProjectTemplate"))
View(course_capacity_local)
head(course_capacity_local)
course_capacity_local$CourseID
char_course_id <- as.character(course_capacity_local$CourseID)
char_course_id
rm(char_course_id)
course_capacity_local$CourseID <- as.character(course_capacity_local$CourseID)
course_capacity_local
head(course_capacity_local)
str(course_capacity_local)
ggplot2(course_capacity_local, aes(x = course_capacity_local$CourseID, y = course_capacity_local$EnrlTotal)) + geom_plot()
ggplot(course_capacity_local, aes(x = course_capacity_local$CourseID, y = course_capacity_local$EnrlTotal)) + geom_plot()
library(ggplot2)
ggplot(course_capacity_local, aes(x = course_capacity_local$CourseID, y = course_capacity_local$EnrlTotal)) + geom_plot()
ggplot(course_capacity_local, aes(x = course_capacity_local$CourseID, y = course_capacity_local$EnrlTotal)) + geom_dotplot()
ggplot(course_capacity_local, aes(x = course_capacity_local$CourseID, y = course_capacity_local$EnrlTotal)) + geom_dotplot(binwidth = .1)
ggplot(course_capacity_local, aes(x = course_capacity_local$CourseID, y = course_capacity_local$EnrlTotal)) + geom_dotplot(binwidth = 100)
ggplot(course_capacity_local, aes(x = course_capacity_local$CourseID, y = course_capacity_local$EnrlTotal)) + geom_dotplot(binwidth = 1)
ggplot(course_capacity_local, aes(x = course_capacity_local$CourseID, y = course_capacity_local$EnrlTotal)) + geom_dotplot(binwidth = 10000)
library('ProjectTemplate')
load.project()
math_crse_data <- training_data_minimized %>%
filter(grepl('MATH', Course))
math_crse_data
rm(math_crse_data)
chem_crse_data <- training_data_minimized %>%
filter(grepl('CHEM', Course))
View(chem_crse_data)
chem_crse_data <- training_data_minimized %>%
filter(grepl('COMPSCI', Course))
View(chem_crse_data)
chem_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
View(chem_crse_data)
rm(chem_crse_data)
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(x = TotalCapacity, y = lEnrlTotal)) + geom_point()
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(x = TotalCapacity, y = EnrlTotal)) + geom_point()
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(x = TotalSections, y = EnrlTotal)) + geom_point()
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(x = Course, y = EnrlTotal), fill = Term) + geom_Bar()
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(x = Course, y = EnrlTotal), fill = Term) + geom_bar()
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(x = Course, y = EnrlTotal)) + geom_bar()
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(x = Course fill(Term))) + geom_bar()
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(x = Course fill=(Term))) + geom_bar()
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(x = Course), fill=(Term))) + geom_bar()
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(x = Course), fill=(Term)) + geom_bar()
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(x = Course, y = EnrlTotal), fill=(Term)) + geom_bar()
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(x = Course, y = EnrlTotal), fill=(Term)) + geom_point()
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(x = CourseID, y = EnrlTotal), fill=(Term)) + geom_point()
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(x = CourseID, y = EnrlTotal), fill=(Term)) + geom_bar()
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(CourseID, EnrlTotal)) + geom_area(aes(fill = Term))
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(CourseID, EnrlTotal)) + geom_area()
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(CourseID, EnrlTotal)) + geom_area(fill = Term)
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(CourseID, EnrlTotal)) +
geom_area(aes(fill = Term))
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(CourseID, EnrlTotal)) +
geom_boxplot(aes(fill = Term))
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(CourseID, EnrlTotal)) +
geom_density(aes(fill = Term))
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(CourseID, EnrlTotal)) +
geom_rug(aes(fill = Term))
library('ProjectTemplate')
load.project()
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(CourseID, EnrlTotal)) +
geom(aes(fill = Term))
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(CourseID, EnrlTotal)) +
geom_line(aes(fill = Term))
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(CourseID, EnrlTotal)) +
geom_point(aes(color = factor(Term))
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(CourseID, EnrlTotal)) +
geom_point(aes(color = factor(Term)))
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(Term, EnrlTotal)) +
geom_point(aes(color = factor(CourseID)))
View(test_data_minimized)
View(datasci_crse_data)
datasci_crse_data <- training_data_minimized %>%
filter(grepl('DATASCI', Course))
ggplot(datasci_crse_data, aes(TotalCapacity, EnrlTotal)) +
geom_point(aes(color = factor(CourseID)))
library('ProjectTemplate')
load.project()
View(final_data_set)
View(final_testing_set)
View(final_training_set)
View(course_capacity_local)
