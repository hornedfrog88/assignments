#GPA_diff <- c((project_data_local[i,"Cumulative.GPA"])-
#      (project_data_local[i-1,"Cumulative.GPA"]))
#        project_data_local %>% mutate(project_data_local[i,x], GPA_Diff = )
#    }
#    print(GPA_diff)
#}
#  x <- x + 1
#}
test_data_multi_term[1,] = project_data_local[1,]
sample_ids <- project_data_local %>% group_by(ID) %>% summarise(number_of_terms = n()) %>% filter(number_of_terms > 3)
test_sample_ids <- sample_ids[sample(nrow(sample_ids),5), ]
test_sample_ids
x <- 1
k <- 1
for (i in 1:nrow(test_sample_ids)) {
print(x)
x_increment(x)
print(x)
for (j in 1:test_sample_ids$number_of_terms[i]) {
test_data_multi_term <- sample_test_data[x,]
x <- x + 1
k <-  k + 1
}
}
#print(number_of_rows)
#row_index <- c(number_of_rows$total_gpa)
#distinct_ids <- length(row_index)
#x <- 1
#while (x <= 50) {
#  for (i in 1:row_index[x]){
#    if (i == 1) {
#      project_data_local %>% mutate(project_data_local[i],GPA_Diff = 0.0)
#    }
#      else {
#GPA_diff <- c((project_data_local[i,"Cumulative.GPA"])-
#      (project_data_local[i-1,"Cumulative.GPA"]))
#        project_data_local %>% mutate(project_data_local[i,x], GPA_Diff = )
#    }
#    print(GPA_diff)
#}
#  x <- x + 1
#}
View(test_data_multi_term)
test_data_multi_term[1,] = project_data_local[1,]
sample_ids <- project_data_local %>% group_by(ID) %>% summarise(number_of_terms = n()) %>% filter(number_of_terms > 3)
test_sample_ids <- sample_ids[sample(nrow(sample_ids),5), ]
test_sample_ids
x <- 1
k <- 1
for (i in 1:nrow(test_sample_ids)) {
x_increment(x)
for (j in 1:test_sample_ids$number_of_terms[i]) {
test_data_multi_term[k, ] <- sample_test_data[x, ]
x <- x + 1
k <-  k + 1
}
}
#print(number_of_rows)
#row_index <- c(number_of_rows$total_gpa)
#distinct_ids <- length(row_index)
#x <- 1
#while (x <= 50) {
#  for (i in 1:row_index[x]){
#    if (i == 1) {
#      project_data_local %>% mutate(project_data_local[i],GPA_Diff = 0.0)
#    }
#      else {
#GPA_diff <- c((project_data_local[i,"Cumulative.GPA"])-
#      (project_data_local[i-1,"Cumulative.GPA"]))
#        project_data_local %>% mutate(project_data_local[i,x], GPA_Diff = )
#    }
#    print(GPA_diff)
#}
#  x <- x + 1
#}
View(test_data_multi_term)
library('ProjectTemplate')
load.project()
library('dplyr')
library('magrittr')
library('ggplot2')
library('tidyr')
rm(PROJECT.DATA.RAW)
rm(project_data_vector)
project_data_local <- tbl_df(PROJECT.DATA.TEST1)
project_data_local %>% group_by(ID) %>% summarise(number_of_terms = n(), sum_GPA = GPA)
project_data_local %>% group_by(ID) %>% summarise(number_of_terms = n(), GPA)
project_data_local %>% group_by(ID) %>% summarise(number_of_terms = n())
project_data_local %>% group_by(ID) %>% summarise(mean(GPA))
head(project_data_local)
project_data_local %>% group_by(ID) %>% summarise(mean(GPA))
head(project_data_local,5)
#project_data_local %>% group_by(ID) %>% summarise(mean(GPA))
head(project_data_local,5)
project_data_local %>% group_by(ID) %>% summarise(avgGPA = mean(GPA),GradIndic = Graduated)
head(project_data_local,5)
#project_data_local %>% group_by(ID) %>% summarise(avgGPA = mean(GPA), GradIndic = Graduated)
head(project_data_local,5)
project_data_local %>% group_by(ID) %>% summarise(avgGPA = mean(GPA), GradIndic = n(Graduated))
head(project_data_local,5)
project_data_local %>% group_by(ID) %>% summarise(avgGPA = mean(GPA), GradIndic = first(Graduated))
head(project_data_local,5)
project_data_local %>% group_by(ID) %>% summarise(avgGPA = mean(GPA), GradIndic = first(Graduated),avgft_terms = mean(FT))
project_data_local %>% group_by(ID) %>% summarise(avgGPA = mean(GPA), GradIndic = first(Graduated),avgft_terms = mean(FT))
View(PROJECT.DATA.TEST1)
View(PROJECT.DATA.TEST1)
project_data_local %>% group_by(ID) %>% summarise(avgGPA = mean(GPA), GradIndic = first(Graduated),avgft_terms = mean(FT), admit_term = first(ATerm), number_of_terms = n())
project_data_local %>% group_by(ID) %>% summarise(avgGPA = mean(GPA), avg_full_time_terms = mean(FT), admit_term = first(ATerm), number_of_terms = n(), GradIndic = first(Graduated))
project_data_local %>% group_by(ID) %>% summarise(AvgGPA = mean(GPA), Avg_Full_Time_Terms = mean(FT), Admit_Term = first(ATerm), Number_of_Terms = n(), GradIndic = first(Graduated))
ggplot(aes(x = AvgGPA, y = GradIndic), data = agg_data_local) + geom_point()
project_data_local <- tbl_df(PROJECT.DATA.TEST1)
agg_data_local <- project_data_local %>% group_by(ID) %>% summarise(AvgGPA = mean(GPA), Avg_Full_Time_Terms = mean(FT), Admit_Term = first(ATerm), Number_of_Terms = n(), GradIndic = first(Graduated))
ggplot(aes(x = AvgGPA, y = GradIndic), data = agg_data_local) + geom_point()
ggplot(aes(x = AvgGPA, y = GradIndic), data = agg_data_local) + geom_point() + xlim(1.6,4.0)
ggplot(aes(x = AvgGPA, y = GradIndic), data = agg_data_local) + geom_bar() + xlim(1.6,4.0)
ggplot(data = agg_data_local) + geom_bar(mapping = aes(x = AvgGPA))
ggplot(data = agg_data_local) + geom_plot(mapping = aes(x = AvgGPA))
head(agg_data_local,5)
#ggplot(x= data = agg_data_local) + geom_plot(mapping = aes(x = AvgGPA))
head(agg_data_local,5)
ggplot(agg_data_local, aes(x= Avg_Full_Time_Terms, y = GradIndic)) + geom_line()
head(agg_data_local,5)
ggplot(agg_data_local, aes(x= Avg_Full_Time_Terms, y = GradIndic)) + geom_plot()
head(agg_data_local,5)
ggplot(agg_data_local, aes(x= Avg_Full_Time_Terms, y = GradIndic)) + geom_point()
head(agg_data_local,5)
ggplot(agg_data_local, aes(x= Avg_Full_Time_Terms, y = AvgGPA)) + geom_point()
ggplot(agg_data_local, aes(x= Number_of_Terms, y = AvgGPA)) + geom_point()
ggplot(agg_data_local, aes(AvgGPA)) + geom_histogram()
ggplot(agg_data_local, aes(AvgGPA)) + geom_histogram(binwidth = .01)
ggplot(agg_data_local, aes(AvgGPA)) + geom_histogram(binwidth = .1)
ggplot(agg_data_local, aes(AvgGPA, fill = GradIndic)) + geom_histogram(binwidth = .1)
ggplot(agg_data_local, aes(AvgGPA, fill = GradIndic)) + geom_histogram()
ggplot(agg_data_local, aes(AvgGPA, fill = GradIndic)) + geom_histogram(binwidth = .1)
agg_data_local <- project_data_local %>% group_by(ID) %>% summarise(AvgGPA = mean(GPA), Avg_Full_Time_Terms = mean(FT), Admit_Term = first(ATerm), Number_of_Terms = n(), GradIndic = first(Graduated), Acad_Prog = first(AcadProg))
ggplot(agg_data_local, aes(x= Number_of_Terms, y = AvgGPA)) + geom_point()
ggplot(agg_data_local, aes(AvgGPA, fill = GradIndic)) + geom_histogram(binwidth = .1)
ggplot(agg_data_local, aes(AvgGPA, fill = Acad_Prog)) + geom_histogram(binwidth = .1)
ggplot(agg_data_local, aes(AvgGPA, fill = Acad_Prog)) + geom_histogram(binwidth = .1) + labs(x = 'Average GPA', y = 'Number of Students by Academic Program')
ggplot(agg_data_local, aes(x= Number_of_Terms, y = AvgGPA)) + geom_point() + labs(x = 'Number of Terms', y = 'Average GPA')
ggplot(agg_data_local, aes(x= AvgGPA, fill = Acad_Prog)) + geom_density(col = NA, alpha = .35) + labs(x = 'Average GPA', y = 'Number of Students by Academic Program')
ggplot(agg_data_local, aes(x= Number_of_Terms, y = AvgGPA)) + geom_boxplot() + labs(x = 'Number of Terms', y = 'Average GPA')
ggplot(agg_data_local, aes(x= GradIndic, y = AvgGPA)) + geom_boxplot() + labs(x = 'Number of Terms', y = 'Average GPA')
ggplot(agg_data_local, aes(x= AvgGPA, y = GradIndic)) + geom_count() + labs(x = 'Number of Terms', y = 'Average GPA')
ggplot(agg_data_local, aes(x= Admit_Term, y = AvgGPA)) + geom_count() + labs(x = 'Number of Terms', y = 'Average GPA')
ggplot(agg_data_local, aes(x= Number_of_Terms, y = AvgGPA)) + geom_count() + labs(x = 'Admit Term', y = 'Average GPA')
View(project_data_local)
library('ProjectTemplate')
load.project()
library('dplyr')
library('magrittr')
library('ggplot2')
library('tidyr')
View(COURSE.CAPACITY.DATA)
rm(project_data_local)
rm(PROJECT.DATA.RAW)
rm(PROJECT.DATA.TEST1)
View(agg_data_local)
rm(agg_data_local)
View(abbrev_project_data)
rm(abrev_project_data)
rm(abbrev_project_data)
View(df)
rm(df)
View(COURSE.CAPACITY.DATA)
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
ggplot(course_capacity_local, aes(x= PercentFull+TotalCapacity, y = EnrlTotal)) + geom_point() + labs(x = 'Full+Cap', y = 'Total Enrolled Students')
ggplot(course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point() + labs(x = 'Full+Cap', y = 'Total Enrolled Students')
ggplot(course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point() + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
ggplot(course_capacity_local, aes(EnrlTotal, fill = TotalSections)) + geom_histogram(binwidth = .1) + labs(x = 'Average GPA', y = 'Number of Students by Academic Program')
ggplot(course_capacity_local, aes(EnrlTotal, fill = TotalSections)) + geom_histogram(binwidth = .1) + labs(x = 'X', y = 'Total Enrolled Students')
ggplot(course_capacity_local, aes(EnrlTotal, fill = TotalSections)) + geom_histogram(binwidth = .8) + labs(x = 'X', y = 'Total Enrolled Students')
ggplot(course_capacity_local, aes(EnrlTotal, fill = TotalSections)) + geom_histogram(binwidth = 3.0) + labs(x = 'X', y = 'Total Enrolled Students')
ggplot(course_capacity_local, aes(EnrlTotal)) + geom_histogram(binwidth = 3.0) + labs(x = 'X', y = 'Total Enrolled Students')
ggplot(course_capacity_local, aes(PercentFull)) + geom_histogram(binwidth = 1.0) + labs(x = 'X', y = 'Total Enrolled Students')
ggplot(course_capacity_local, aes(x= PercentFull, y = EnrlTotal)) + geom_point() + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
course_capacity_local %>% filter(PercentFull<=2.0)
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point() + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
clean_course_capacity_local <- course_capacity_local %>% filter(PercentFull<=2.0)
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point() + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
ggplot(clean_course_capacity_local, aes(x= PercentFull, y = EnrlTotal)) + geom_point() + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
ggplot(clean_course_capacity_local, aes(x= PercentFull, y = EnrlTotal)) + geom_point() + labs(x = 'Percent Full', y = 'Total Enrolled Students')
ggplot(clean_course_capacity_local, aes(x= PercentFull*100, y = EnrlTotal)) + geom_point() + labs(x = 'Percent Full', y = 'Total Enrolled Students')
model1 <- lm(EnrlTotal~TotalCapacity,data = clean_course_capacity_local)
model1
model1 <- lm(EnrlTotal~TotalCapacity,data = clean_course_capacity_local)
model2 <- lm(EnrlTotal~TotalCapacity+TotalSections,data = clean_course_capacity_local)
model2
summary(model1)
summary(model2)
summary?
?summary
?summary()
View(config)
library('ProjectTemplate')
load.project()
#library('dplyr')
#library('magrittr')
#library('ggplot2')
#library('tidyr')
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
library('ProjectTemplate')
load.project()
#library('dplyr')
#library('magrittr')
#library('ggplot2')
#library('tidyr')
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
clean_course_capacity_local <- course_capacity_local %>% filter(PercentFull<=2.0)
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point() + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
model1 <- lm(EnrlTotal~TotalCapacity,data = clean_course_capacity_local)
summary(model1)
clean_course_capacity_local <- course_capacity_local %>% filter(PercentFull<=1.5)
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point() + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
model1 <- lm(EnrlTotal~TotalCapacity,data = clean_course_capacity_local)
summary(model1)
model1 <- lm(EnrlTotal~TotalCapacity,data = clean_course_capacity_local)
summary(model1)
abline(model1)
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point() + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
abline(model1)
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point() + abline(model1) labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point(color='blue') + geom_smooth(method = "lm", se = False) + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point(color='blue') + geom_smooth(method = "lm", se = FALSE) + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point(color='blue') + geom_smooth(method = "lm", se = FALSE, color='Red') + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point(color='blue') + geom_line(method = "lm", se = FALSE, color='Red') + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point(color='blue') + geom_smooth(method = "lm", se = TRUE, color='Red') + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
model1 <- lm(EnrlTotal~TotalCapacity,data = clean_course_capacity_local)
summary(model1)
View(sample_ids)
rm(sample_ids)
View(project.info)
View(sample_test_data)
rm(sample_test_data)
View(test_sample_ids)
rm(test_sample_ids)
View(test_data_multi_term)
rm(test_data_multi_term)
rm(model2)
rm(i,j,k,x)
View(x_increment)
rm(x_increment)
distinct_ids
rm(distinct_ids)
library('ProjectTemplate')
load.project()
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
clean_course_capacity_local <- course_capacity_local %>% filter(PercentFull<=2.0)
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point() + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
model1 <- lm(EnrlTotal~TotalCapacity,data = clean_course_capacity_local)
summary(model1)
library('ProjectTemplate')
load.project()
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
clean_course_capacity_local <- course_capacity_local %>% filter(PercentFull<=2.0)
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point() + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
model1 <- lm(EnrlTotal~TotalCapacity,data = clean_course_capacity_local)
summary(model1)
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point(color='blue') + geom_smooth(method = "lm", se = TRUE, color='Red') + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
ggplot(clean_course_capacity_local, aes(x= TotalCapacity, y = EnrlTotal)) + geom_point(color='blue') + geom_smooth(method = "lm", se = FALSE, color='Red') + labs(x = 'Enrollment Capacity', y = 'Total Enrolled Students')
View(course_capacity_local)
library(rmarkdown)
install.packages("yaml")
install.packages("caret")
install.packages("stringr")
install.packages("timeDate")
install.packages("tidyselect")
setwd("C:/Users/Richard/Desktop/csx415-assignments/project")
knitr::opts_chunk$set(echo = TRUE)
head(clean_course_capacity_local)
View(PROJECT.DATA.RAW)
rm(PROJECT.DATA.RAW)
View(number_of_rows)
View(number_of_rows)
rm(number_of_rows)
View(df)
rm(df)
View(config)
View(config)
View(project_data_local)
rm(project_data_local)
View(project.info)
View(project_data_vector)
View(project_data_vector)
library('ProjectTemplate')
load.project()
View(PROJECT.DATA.RAW)
View(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
View(COURSE.CAPACITY.DATA)
View(PROJECT.DATA.RAW)
View(project_data_vector)
View(PROJECT.DATA.RAW)
View(project.info)
View(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
View(PROJECT.DATA.RAW)
library('ProjectTemplate')
load.project()
View(PROJECT.DATA.TEST1)
View(PROJECT.DATA.TEST1)
library('ProjectTemplate')
load.project()
library('ProjectTemplate')
load.project()
View(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
View(config)
View(COURSE.CAPACITY.DATA)
library('ProjectTemplate')
load.project()
View(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
rm(PROJECT.DATA.RAW)
rm(df)
rm(number_of_rows)
View(project_data_local)
rm(project_data_local)
View(project.info)
View(config)
View(project_data_vector)
rm(project_data_vector)
View(project.info)
View(project.info)
View(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
View(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
View(COURSE.CAPACITY.DATA)
library('ProjectTemplate')
load.project()
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
total_enrl_attempts_local <- tbl_df(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
combined_data_local <- merge(total_enrl_attempts_local, course_capacity_local[, c("Term", "SummerIndicator")], by="CourseID")
View(total_enrl_attempts_local)
View(course_capacity_local)
combined_data_local <- merge(total_enrl_attempts_local, course_capacity_local, by= c('CourseID','Term'))
View(combined_data_local)
combined_data_local <- merge(course_capacity_local, total_enrl_attempts_local, by= c('CourseID','Term'))
View(combined_data_local)
training_data_local <- combined_data_local %>% filter(Term < 2182)
test_data_local <- combined_data_local %>% filter(Term >= 2182)
View(training_data_local)
View(training_data_local)
View(training_data_local)
?lm
mode11 <- lm(EnrlTotal ~ Course + TotalCapacity + TotalSections + TotalAttempts, data=training_data_local)
summary(model1)
mode11 <- lm(EnrlTotal ~ TotalCapacity + TotalSections + TotalAttempts, data=training_data_local)
summary(mode11)
mode11 <- lm(EnrlTotal ~ TotalCapacity + TotalSections + TotalAttempts, data=training_data_local)
summary(mode11)
plot(model1)
mode11 <- lm(EnrlTotal ~ TotalCapacity + TotalSections + TotalAttempts, data=training_data_local)
plot(model1)
mode11 <- lm(EnrlTotal ~ TotalCapacity)
mode11 <- lm(EnrlTotal ~ TotalCapacity, data = training_data_local)
#+ TotalSections + TotalAttempts, data=training_data_local)
plot(model1)
fit <- lm(EnrlTotal ~ TotalCapacity, data = training_data_local)
#+ TotalSections + TotalAttempts, data=training_data_local)
#plot(model1)
plot(fit)
View(training_data_local)
fit <- lm(EnrlTotal ~ TotalCapacity + TotalSections + TotalAttempts, data = training_data_local)
#+ TotalSections + TotalAttempts, data=training_data_local)
#plot(model1)
plot(fit)
summary(fit)
fit <- lm(EnrlTotal ~ TotalCapacity + TotalAttempts, data = training_data_local)
summary(fit)
summary(fit)
fit <- lm(EnrlTotal ~ CourseID + TotalCapacity + TotalAttempts, data = training_data_local)
summary(fit)
pairs(training_data_local)
training_data_minimized <- training_data_local %>% select(EnrlTotal, CourseID, TotalCapacity,TotalAttempts)
pairs(training_data_minimized)
training_data_minimized <- training_data_local %>% select(EnrlTotal, CourseID, TotalCapacity,TotalAttempts)
pairs(training_data_minimized)
training_data_minimized <- training_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
pairs(training_data_minimized)
fit <- lm(EnrlTotal ~ TotalSections + TotalCapacity + TotalAttempts, data = training_data_minimized)
summary(fit)
cor(training_data_minimized)
fit <- lm(EnrlTotal ~ TotalSections + TotalCapacity + TotalAttempts, data = training_data_minimized)
summary(fit)
install.packages("rpart.plot")
rpart.plot(fit_rpart)
library('ProjectTemplate')
load.project()
library(rpart)
library(rpart.plot)
rpart.plot(fit_rpart)
rpart.plot(fit_rpart, type = 3, digits = 3, fallen.leaves = TRUE)
fit_rpart <- rpart(EnrlTotal ~ ., data = training_data_minimized, method = "anova")
fit_rpart
rpart.plot(fit_rpart, type = 3, digits = 3, fallen.leaves = TRUE)
library('ProjectTemplate')
load.project()
library(rpart)
library(rpart.plot)
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
total_enrl_attempts_local <- tbl_df(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
combined_data_local <- merge(course_capacity_local, total_enrl_attempts_local, by= c('CourseID','Term'))
training_data_local <- combined_data_local %>% filter(Term < 2182)
test_data_local <- combined_data_local %>% filter(Term >= 2182)
training_data_minimized <- training_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
fit_rpart <- rpart(EnrlTotal ~ ., data = training_data_minimized, method = "anova")
fit_rpart
predict_rpart <- predict(fit_rpart, test_data_minimized)
library('ProjectTemplate')
load.project()
library(rpart)
library(rpart.plot)
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
total_enrl_attempts_local <- tbl_df(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
combined_data_local <- merge(course_capacity_local, total_enrl_attempts_local, by= c('CourseID','Term'))
training_data_local <- combined_data_local %>% filter(Term < 2182)
test_data_local <- combined_data_local %>% filter(Term >= 2182)
training_data_minimized <- training_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
test_data_minimized <- test_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
fit_rpart <- rpart(EnrlTotal ~ ., data = training_data_minimized, method = "anova")
fit_rpart
rpart.plot(fit_rpart, type = 3, digits = 3, fallen.leaves = TRUE)
predict_rpart <- predict(fit_rpart, test_data_minimized)
predict_rpart
predict_rpart <- predict(fit_rpart, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_rpart)
library('ProjectTemplate')
load.project()
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
total_enrl_attempts_local <- tbl_df(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
combined_data_local <- merge(course_capacity_local, total_enrl_attempts_local, by= c('CourseID','Term'))
training_data_local <- combined_data_local %>% filter(Term < 2182)
test_data_local <- combined_data_local %>% filter(Term >= 2182)
training_data_minimized <- training_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
test_data_minimized <- test_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
pairs(training_data_minimized)
cor(training_data_minimized)
predict_linear <- predict(fit, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_linear)
MeanAbsoluteError
predict_linear <- predict(fit, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_linear)
print("The Mean Abosulte Error = ",MeanAbsoluteError)
predict_linear <- predict(fit, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_linear)
print("Mean Absolute Error = $MeanAbsoluteError")
predict_linear <- predict(fit, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_linear)
print("Mean Absolute Error = %MeanAbsoluteError")
predict_linear <- predict(fit, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_linear)
print("Mean Absolute Error = ", MeanAbsoluteError)
predict_linear <- predict(fit, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_linear)
print("The Mean Absolute Error of the Prediction is ", %MeanAbsoluteError)
predict_linear <- predict(fit, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_linear)
print(paste("The Mean Absolute Error of the Prediction is ", MeanAbsoluteError))
predict_linear <- predict(fit, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_linear)
print(paste("The Mean Absolute Error of the Prediction is ", round(MeanAbsoluteError,2))
predict_linear <- predict(fit, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_linear)
print(paste("The Mean Absolute Error of the Prediction is ", round(MeanAbsoluteError,digits = 2))
predict_linear <- predict(fit, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_linear)
round(MeanAbsoluteError, digits = 2)
#print(paste("The Mean Absolute Error of the Prediction is ", #round(MeanAbsoluteError,digits = 2))
predict_linear <- predict(fit, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_linear)
round(MeanAbsoluteError, digits = 2)
print(paste("The Mean Absolute Error of the Prediction is ", round(MeanAbsoluteError, digits = 2)))
library('ProjectTemplate')
load.project()
library(rpart)
library(rpart.plot)
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
total_enrl_attempts_local <- tbl_df(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
combined_data_local <- merge(course_capacity_local, total_enrl_attempts_local, by= c('CourseID','Term'))
training_data_local <- combined_data_local %>% filter(Term < 2182)
test_data_local <- combined_data_local %>% filter(Term >= 2182)
training_data_minimized <- training_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
test_data_minimized <- test_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
fit_rpart <- rpart(EnrlTotal ~ ., data = training_data_minimized, method = "anova")
fit_rpart
rpart.plot(fit_rpart, type = 3, digits = 3, fallen.leaves = TRUE)
predict_rpart <- predict(fit_rpart, test_data_minimized)
MeanAbsoluteError <- MAE(test_data_minimized$EnrlTotal,predict_rpart)
print(paste("The Mean Absolute Error of the Prediction is", round(MeanAbsoluteError, digits = 2)))
library('ProjectTemplate')
load.project()
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
total_enrl_attempts_local <- tbl_df(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
combined_data_local <- merge(course_capacity_local, total_enrl_attempts_local, by= c('CourseID','Term'))
training_data_local <- combined_data_local %>% filter(Term < 2182)
test_data_local <- combined_data_local %>% filter(Term >= 2182)
training_data_minimized <- training_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
test_data_minimized <- test_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
pairs(training_data_minimized)
cor(training_data_minimized)
fit <- lm(EnrlTotal ~ TotalSections + TotalCapacity + TotalAttempts, data = training_data_minimized)
summary(fit)
library('ProjectTemplate')
load.project()
library(rpart)
library(rpart.plot)
course_capacity_local <- tbl_df(COURSE.CAPACITY.DATA)
total_enrl_attempts_local <- tbl_df(TOTAL.ENRL.ATTEMPTS.BY.COURSE)
combined_data_local <- merge(course_capacity_local, total_enrl_attempts_local, by= c('CourseID','Term'))
training_data_local <- combined_data_local %>% filter(Term < 2182)
test_data_local <- combined_data_local %>% filter(Term >= 2182)
training_data_minimized <- training_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
test_data_minimized <- test_data_local %>% select(EnrlTotal, TotalSections, TotalCapacity,TotalAttempts)
fit_rpart <- rpart(EnrlTotal ~ ., data = training_data_minimized, method = "anova")
fit_rpart
rpart.plot(fit_rpart, type = 3, digits = 3, fallen.leaves = TRUE)
